<Activity mc:Ignorable="sap sap2010" x:Class="Report_Download" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Timenow" Type="InArgument(x:String)" />
    <x:Property Name="Folder_path" Type="InOutArgument(x:String)" />
    <x:Property Name="Out_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="Today_Date" Type="InArgument(x:String)" />
    <x:Property Name="Arg_Status" Type="InOutArgument(x:Boolean)" />
  </x:Members>
  <this:Report_Download.Timenow>
    <InArgument x:TypeArguments="x:String" />
  </this:Report_Download.Timenow>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1043,3754</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Report_Download_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="35">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="70">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="651,3689" sap2010:WorkflowViewState.IdRef="Sequence_5">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="609,3597" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Report_Download" sap:VirtualizedContainerService.HintSize="571,3370" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="ui:DatabaseConnection" Name="DB_CON" />
            <Variable x:TypeArguments="sd:DataTable" Name="Output" />
            <Variable x:TypeArguments="x:Boolean" Name="File1" />
            <Variable x:TypeArguments="ui:DatabaseConnection" Name="DB_CON1" />
            <Variable x:TypeArguments="sd:DataTable" Name="Output1" />
            <Variable x:TypeArguments="sd:DataTable" Name="Output2" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:KillProcess AppliesTo="{x:Null}" Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="529,51" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="Excel">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:KillProcess>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="529,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Report Downloading Started&quot;]" />
          <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[File1]" sap:VirtualizedContainerService.HintSize="529,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[Folder_path+Out_Config(&quot;Punching_Report&quot;).ToString]" PathType="File">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:PathExists>
          <If Condition="[File1=True]" sap:VirtualizedContainerService.HintSize="529,301" sap2010:WorkflowViewState.IdRef="If_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[Folder_path+Out_Config(&quot;Punching_Report&quot;).ToString]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:DeleteFileX>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;File Does Not Exist&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </If.Else>
          </If>
          <ui:DatabaseConnect DisplayName="Connect to database" sap:VirtualizedContainerService.HintSize="529,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.Odbc" ConnectionString="Dsn=RPA_RO;uid=RPA_RO;pwd=Robot#123" DatabaseConnection="[DB_CON]" />
          <ui:DatabaseTransaction ContinueOnError="{x:Null}" DatabaseConnection="{x:Null}" ConnectionString="Dsn=RPA_RO;uid=RPA_RO;pwd=Robot#123" DisplayName="Start Transaction" sap:VirtualizedContainerService.HintSize="529,380" sap2010:WorkflowViewState.IdRef="DatabaseTransaction_1" ProviderName="System.Data.Odbc" UseTransaction="True">
            <ui:DatabaseTransaction.Body>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,271" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[Output]" DisplayName="Run query" ExistingDbConnection="[DB_CON]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="select 'EMPLOYEE CODE',&#xA;       'EMP NAME',&#xA;       'BRANCH ID',&#xA;       'BRANCH NAME',&#xA;       'AREA NAME',&#xA;       'REGION NAME',&#xA;       'POST',&#xA;       'DESIGNATION',&#xA;       'DEPARTMENT',&#xA;       'SHIFT TIME',&#xA;       'DAY',&#xA;       'MORNING TIME',&#xA;       'EVENING TIME',&#xA;       'REMARKS',&#xA;       'BLOCK'&#xA;  from dual&#xA;union all&#xA;select to_char(da.emp_code),&#xA;       em.EMP_NAME,&#xA;       to_char(da.branch_id),&#xA;       b.BRANCH_NAME,&#xA;       b.area_name,&#xA;       b.reg_name,&#xA;       p.post_name,&#xA;       d.designation,&#xA;       dp.dep_name,&#xA;       bt.in_time,&#xA;       to_char(curr_date) as day,&#xA;       decode(da.m_time, NULL, '----------', da.m_time) as morning_time,&#xA;       decode(e_time, NULL, '----------', e_time) as evening_time,&#xA;       case&#xA;         when (da.m_time is null and da.pay_id not in (50, 52)) and&#xA;              (da.pay_id not in (51, 52) and da.e_time is null) then&#xA;          'Absent'&#xA;         else&#xA;          case&#xA;            when da.pay_id in (50) and da.e_time is not null then&#xA;             'Morning-REG'&#xA;            else&#xA;             case&#xA;               when da.pay_id in (51) and da.m_time is not null then&#xA;                'Evening-REG'&#xA;               else&#xA;                case&#xA;                  when da.pay_id in (52) then&#xA;                   'BOTH-REG'&#xA;                  else&#xA;                   case&#xA;                     when (da.m_time &gt; bt1.in_time and da.m_time &lt;&gt; 'TOUR' and&#xA;                          da.m_time &lt;&gt; 'COMPEN' and da.pay_id not in (50, 7, 52)) and&#xA;                          (da.e_time is null and da.pay_id not in (51, 7, 52)) then&#xA;                      'Late &amp; Non-Marking'&#xA;                     else&#xA;                      case&#xA;                        when da.m_time &lt;= bt1.in_time and&#xA;                             (da.e_time is null and da.pay_id not in (51, 52)) then&#xA;                         'Non-Marking Evening'&#xA;                        else&#xA;                         case&#xA;                           when (da.m_time is null and da.pay_id not in (50, 52, 7)) and&#xA;                                da.e_time &lt; bt2.out_time then&#xA;                            'Non-Marking Morning &amp; Early-Going'&#xA;                           else&#xA;                            case&#xA;                              when (da.m_time is null and da.pay_id not in (50, 52)) and&#xA;                                   da.e_time &gt;= bt2.out_time then&#xA;                               'Non-Marking Morning'&#xA;                              else&#xA;                               case&#xA;                                 when da.m_time &lt;= bt1.in_time and&#xA;                                      (da.e_time &lt; bt2.out_time and da.e_time &lt;&gt; 'TOUR' and&#xA;                                      da.e_time &lt;&gt; 'COMPEN' and da.pay_id not in (51, 52, 7)) then&#xA;                                  'Early-Going'&#xA;                                 else&#xA;                                  case&#xA;                                    when (da.m_time &gt; bt1.in_time and da.pay_id not in (50, 52)) and&#xA;                                         (da.e_time &lt; bt2.out_time and da.pay_id not in (51, 52, 7)) then&#xA;                                     'Late &amp; Early Going'&#xA;                                    else&#xA;                                     case&#xA;                                       when (da.m_time &gt; bt1.in_time and da.m_time &lt;&gt; 'TOUR' and&#xA;                                            da.m_time &lt;&gt; 'COMPEN' and da.pay_id not in (50, 52, 7)) and&#xA;                                            da.e_time &gt;= bt2.out_time then&#xA;                                        'Late'&#xA;                                       else&#xA;                                        case&#xA;                                          when da.pay_id in (50) and da.E_TIME is null then&#xA;                                           'REG-Morning &amp; Non-Marking Evening'&#xA;                                          else&#xA;                                           case&#xA;                                             when da.pay_id in (51) and da.M_TIME is null then&#xA;                                              'REG-EVENING &amp; Non-Marking Morning'&#xA;                                             else&#xA;                                              case&#xA;                                                when da.pay_id in (50) and da.e_time &lt;&gt; 'TOUR' and&#xA;                                                     da.e_time &lt;&gt; 'COMPEN' and da.E_TIME &lt; bt2.out_time then&#xA;                                                 'REG-Morning &amp; Early-Going'&#xA;                                                else&#xA;                                                 case&#xA;                                                   when da.pay_id in (51) and da.m_time &lt;&gt; 'TOUR' and&#xA;                                                        da.m_time &lt;&gt; 'COMPEN' and da.M_TIME &gt; bt1.in_time then&#xA;                                                    'REG-Evening &amp; Late'&#xA;                                                   else&#xA;                                                    case&#xA;                                                      when da.pay_id in (52) then&#xA;                                                       'REG-Morning &amp; Evening'&#xA;                                                      else&#xA;                                                       '-'&#xA;                                                    end&#xA;                                                 end&#xA;                                              end&#xA;                                           end&#xA;                                        end&#xA;                                     end&#xA;                                  end&#xA;                               end&#xA;                            end&#xA;                         end&#xA;                      end&#xA;                   end&#xA;                end&#xA;             end&#xA;          end&#xA;       end as remarks,&#xA;       case&#xA;         when da.gun_status &lt;&gt; 0 then&#xA;          'PUNCHING-BLOCK'&#xA;         else&#xA;          '--'&#xA;       end as block&#xA;  from mana0809.daily_attend       da,&#xA;       mana0809.emp_master         em,&#xA;       mana0809.time_tab           bt1,&#xA;       mana0809.time_tab           bt2,&#xA;       mana0809.branch_dtl_new     b,&#xA;       mana0809.post_mst           p,&#xA;       mana0809.department_mst     dp,&#xA;       mana0809.branch_time        bt,&#xA;       mana0809.designation_master d&#xA; where em.emp_code = da.emp_code&#xA;   and da.FIRM_ID = 1&#xA;   and da.curr_date = to_date(sysdate)&#xA;   and bt1.shift_id = da.m_shift&#xA;   and bt2.shift_id = da.e_shift&#xA;   and da.branch_id = b.BRANCH_ID&#xA;   and p.post_id = em.POST_ID&#xA;   and d.designation_id = em.DESIGNATION_ID&#xA;   and dp.dep_id=em.DEPARTMENT_ID&#xA;   and bt.branch_id=b.BRANCH_ID&#xA;   and em.DEPARTMENT_ID='14'&#xA;   and p.post_id not in (136)&#xA;   and b.BRANCH_ID &gt; '0'&#xA;   ">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,180" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[Output2]" DisplayName="Run query" ExistingDbConnection="[DB_CON]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" Sql="select da.emp_code,&#xA;       em.EMP_NAME,&#xA;       da.branch_id,&#xA;       b.BRANCH_NAME,&#xA;       b.area_name,&#xA;       b.reg_name,&#xA;       te.fzm,&#xA;       p.post_name,&#xA;       d.designation,&#xA;       te.dep_name,&#xA;       bm.in_time,&#xA;       to_char(curr_date) as day,&#xA;       decode(da.m_time, NULL, '----------', da.m_time) as morning_time,&#xA;       decode(e_time, NULL, '----------', e_time) as evening_time,&#xA;       case&#xA;         when (da.m_time is null and da.pay_id not in (50, 52)) and&#xA;              (da.pay_id not in (51, 52) and da.e_time is null) then&#xA;          'Absent'&#xA;         else&#xA;          case&#xA;            when da.pay_id in (50) and da.e_time is not null then&#xA;             'Morning-REG'&#xA;            else&#xA;             case&#xA;               when da.pay_id in (51) and da.m_time is not null then&#xA;                'Evening-REG'&#xA;               else&#xA;                case&#xA;                  when da.pay_id in (52) then&#xA;                   'BOTH-REG'&#xA;                  else&#xA;                   case&#xA;                     when (da.m_time &gt; bt1.in_time and da.m_time &lt;&gt; 'TOUR' and&#xA;                          da.m_time &lt;&gt; 'COMPEN' and da.pay_id not in (50, 7, 52)) and&#xA;                          (da.e_time is null and da.pay_id not in (51, 7, 52)) then&#xA;                      'Late &amp; Non-Marking'&#xA;                     else&#xA;                      case&#xA;                        when da.m_time &lt;= bt1.in_time and&#xA;                             (da.e_time is null and da.pay_id not in (51, 52)) then&#xA;                         'Non-Marking Evening'&#xA;                        else&#xA;                         case&#xA;                           when (da.m_time is null and da.pay_id not in (50, 52, 7)) and&#xA;                                da.e_time &lt; bt2.out_time then&#xA;                            'Non-Marking Morning &amp; Early-Going'&#xA;                           else&#xA;                            case&#xA;                              when (da.m_time is null and da.pay_id not in (50, 52)) and&#xA;                                   da.e_time &gt;= bt2.out_time then&#xA;                               'Non-Marking Morning'&#xA;                              else&#xA;                               case&#xA;                                 when da.m_time &lt;= bt1.in_time and&#xA;                                      (da.e_time &lt; bt2.out_time and da.e_time &lt;&gt; 'TOUR' and&#xA;                                      da.e_time &lt;&gt; 'COMPEN' and da.pay_id not in (51, 52, 7)) then&#xA;                                  'Early-Going'&#xA;                                 else&#xA;                                  case&#xA;                                    when (da.m_time &gt; bt1.in_time and da.pay_id not in (50, 52)) and&#xA;                                         (da.e_time &lt; bt2.out_time and da.pay_id not in (51, 52, 7)) then&#xA;                                     'Late &amp; Early Going'&#xA;                                    else&#xA;                                     case&#xA;                                       when (da.m_time &gt; bt1.in_time and da.m_time &lt;&gt; 'TOUR' and&#xA;                                            da.m_time &lt;&gt; 'COMPEN' and da.pay_id not in (50, 52, 7)) and&#xA;                                            da.e_time &gt;= bt2.out_time then&#xA;                                        'Late'&#xA;                                       else&#xA;                                        case&#xA;                                          when da.pay_id in (50) and da.E_TIME is null then&#xA;                                           'REG-Morning &amp; Non-Marking Evening'&#xA;                                          else&#xA;                                           case&#xA;                                             when da.pay_id in (51) and da.M_TIME is null then&#xA;                                              'REG-EVENING &amp; Non-Marking Morning'&#xA;                                             else&#xA;                                              case&#xA;                                                when da.pay_id in (50) and da.e_time &lt;&gt; 'TOUR' and&#xA;                                                     da.e_time &lt;&gt; 'COMPEN' and da.E_TIME &lt; bt2.out_time then&#xA;                                                 'REG-Morning &amp; Early-Going'&#xA;                                                else&#xA;                                                 case&#xA;                                                   when da.pay_id in (51) and da.m_time &lt;&gt; 'TOUR' and&#xA;                                                        da.m_time &lt;&gt; 'COMPEN' and da.M_TIME &gt; bt1.in_time then&#xA;                                                    'REG-Evening &amp; Late'&#xA;                                                   else&#xA;                                                    case&#xA;                                                      when da.pay_id in (52) then&#xA;                                                       'REG-Morning &amp; Evening'&#xA;                                                      else&#xA;                                                       '-'&#xA;                                                    end&#xA;                                                 end&#xA;                                              end&#xA;                                           end&#xA;                                        end&#xA;                                     end&#xA;                                  end&#xA;                               end&#xA;                            end&#xA;                         end&#xA;                      end&#xA;                   end&#xA;                end&#xA;             end&#xA;          end&#xA;       end as remarks,&#xA;       case&#xA;         when da.gun_status &lt;&gt; 0 then&#xA;          'PUNCHING-BLOCK'&#xA;         else&#xA;          '--'&#xA;       end as block&#xA;  from mana0809.daily_attend       da,&#xA;       mana0809.emp_master         em,&#xA;       mana0809.time_tab           bt1,&#xA;       mana0809.time_tab           bt2,&#xA;       mana0809.branch_dtl_new     b,&#xA;       mana0809.post_mst           p,&#xA;       mana0809.designation_master d,&#xA;       mana0809.branch_time bm,&#xA;       mana0809.tableau_employ_dtl te&#xA; where em.emp_code = da.emp_code&#xA;   and da.FIRM_ID = 1&#xA;   and da.curr_date = to_date(sysdate)&#xA;   and bt1.shift_id = da.m_shift&#xA;   and te.emp_code=da.emp_code&#xA;   and te.emp_code=em.EMP_CODE&#xA;   and bt2.shift_id = da.e_shift&#xA;   and da.branch_id = b.BRANCH_ID&#xA;   and p.post_id = em.POST_ID&#xA;   and d.designation_id = em.DESIGNATION_ID&#xA;   and bm.branch_id=em.BRANCH_ID&#xA;   and b.BRANCH_ID &gt; '0'&#xA;   and p.post_name in('B.H (G)','HOUSE KEEPING ASSISTANT','JR. ASST.','JR. OFFICER','JR.ASST (I.A - G)','JR.ASST (I.A - NG)','JR.ASST (I.A - PG)',&#xA;                      'JR.ASST (I.A)','JR.ASST(G)','JR.ASST(N.G)','JR.ASST(P.G)','JR.ASST(T-G)','SR. ASST.','SR.ASST (N.G)','TEMPORARY HOUSE KEEPING ASSISTANT',&#xA;                      'A.B.H (F)','SALES EXECUTIVE','JR ASST(BUFFER)') &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   &#xA;   ">
                        <ui:ExecuteQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteQuery.Parameters>
                      </ui:ExecuteQuery>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
              </Sequence>
            </ui:DatabaseTransaction.Body>
          </ui:DatabaseTransaction>
          <ui:WriteRange AddHeaders="False" DataTable="[Output]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="529,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Punching Report(B)" WorkbookPath="[Folder_path+Out_Config(&quot;Punching_Report&quot;).ToString]">
            <ui:WriteRange.StartingCell>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:WriteRange.StartingCell>
          </ui:WriteRange>
          <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="529,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="529,260" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" WorkbookPath="[&quot;C:\Users\&quot;+Environment.UserName+&quot;\Documents\UiPath\Branch Opening Status Report\Macro\Text to Num.xlsm&quot;]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_1" MacroName="Num" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
          </ui:ExcelApplicationScope>
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="529,51" sap2010:WorkflowViewState.IdRef="CommentOut_2">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,207" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:WriteRange AddHeaders="True" DataTable="[Output2]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="Punching Report(B)" WorkbookPath="Report\Branch Punching Report.xlsx">
                  <ui:WriteRange.StartingCell>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:WriteRange.StartingCell>
                </ui:WriteRange>
              </Sequence>
            </ui:CommentOut.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CommentOut>
          <ui:DatabaseDisconnect DatabaseConnection="[DB_CON]" DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="529,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="529,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Report Downloading Completed&quot;]" />
          <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[File1]" sap:VirtualizedContainerService.HintSize="529,89" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[Folder_path+Out_Config(&quot;Norms_Report&quot;).ToString]" PathType="File">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:PathExists>
          <If Condition="[File1=True]" sap:VirtualizedContainerService.HintSize="529,301" sap2010:WorkflowViewState.IdRef="If_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="DeleteFileX_2" Path="[Folder_path+Out_Config(&quot;Norms_Report&quot;).ToString]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:DeleteFileX>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;File(Norms Report)Does Not Exist&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </If.Else>
          </If>
          <ui:DatabaseConnect DisplayName="Connect to database" sap:VirtualizedContainerService.HintSize="529,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_2" ProviderName="System.Data.Odbc" ConnectionString="Dsn=KPMG;uid=KPMG;pwd=Asd$1234" DatabaseConnection="[DB_CON1]" />
          <ui:DatabaseTransaction ContinueOnError="{x:Null}" DatabaseConnection="{x:Null}" ConnectionString="Dsn=KPMG;uid=KPMG;pwd=Asd$1234" DisplayName="Start Transaction" sap:VirtualizedContainerService.HintSize="529,289" sap2010:WorkflowViewState.IdRef="DatabaseTransaction_2" ProviderName="System.Data.Odbc" UseTransaction="True">
            <ui:DatabaseTransaction.Body>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,180" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[Output1]" DisplayName="Run query" ExistingDbConnection="[DB_CON1]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="SELECT &#xA;      a.branch_id,&#xA;      a.branch_name,&#xA;      a.fzm,&#xA;      a.norms&#xA;FROM tbl_tableau_emp_hrmdta1 a">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
              </Sequence>
            </ui:DatabaseTransaction.Body>
          </ui:DatabaseTransaction>
          <ui:WriteRange AddHeaders="True" DataTable="[Output1]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="529,115" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Norms" WorkbookPath="[Folder_path+Out_Config(&quot;Norms_Report&quot;).ToString]">
            <ui:WriteRange.StartingCell>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:WriteRange.StartingCell>
          </ui:WriteRange>
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="529,51" sap2010:WorkflowViewState.IdRef="CommentOut_3">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,207" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:WriteCell Cell="K1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="Punching Report(B)" Text="SHIFT_TIME" WorkbookPath="Report\Branch Punching Report.xlsx" />
              </Sequence>
            </ui:CommentOut.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CommentOut>
          <ui:DatabaseDisconnect DatabaseConnection="[DB_CON1]" DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="529,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_2" />
          <Assign sap:VirtualizedContainerService.HintSize="529,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="575,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[exception.Message]" />
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[Arg_Status]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>